// Code generated by go-bindata.
// sources:
// asset/bootstrap3/button.html
// asset/bootstrap3/checkbox.html
// asset/bootstrap3/form.html
// asset/bootstrap3/input.html
// asset/bootstrap3/modal.html
// asset/bootstrap3/panel.html
// asset/bootstrap3/radio.html
// asset/bootstrap3/table.html
// asset/bootstrap3/textarea.html
// DO NOT EDIT!

package template

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetBootstrap3ButtonHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x50\xcb\x6a\xc3\x30\x10\xbc\x1b\xfc\x0f\x83\x42\x8e\x6e\x0e\x3d\x15\x6c\x43\xff\xa1\xf7\xa2\xc4\xeb\x46\x20\x4b\xc1\x5a\xa5\x4d\x55\xfd\x7b\x09\x22\x69\xa4\x82\x69\x4b\x75\xd2\xb0\xf3\xd8\xd9\xb0\xc2\xeb\x9e\x0c\x46\x3b\x4f\xcf\x5a\x9e\xac\x67\x28\x87\xbd\x9d\xd5\xbb\x35\x2c\x35\x56\xb1\xae\xc2\x1a\x6a\xcc\x38\xd2\x0c\x19\xee\x3a\x88\x2f\x91\xc0\x3a\xd6\x15\x00\xb4\x83\x3a\x62\xa7\xa5\x73\x9d\x38\xf3\x9b\x97\xd9\xfa\x83\xe8\xd3\xb4\x64\xec\xac\x6e\xdc\xd4\xdc\x8b\xbe\xdd\x0c\xea\xb8\xcc\x7a\xb8\x75\x39\xbf\xb4\x25\x69\x9a\xee\x1e\x99\x67\xb5\xf5\x4c\xd7\x45\xae\x46\x5b\xcf\x6c\x0d\xf8\x74\xa0\x4e\x24\x20\x10\x42\xa1\xfb\x70\x72\x24\xc4\xd8\x5f\x26\x4f\xf4\xc6\x88\xb1\xdd\x24\xc9\xf7\x68\xd2\xee\x87\x69\xbf\xf0\x34\x83\x1a\x33\xd3\xdb\xbb\x5c\xfe\x65\xf8\xe2\x1d\xfe\xb7\x7f\x19\xfd\x97\xbe\x59\xcf\x0c\xd4\xd5\x67\x00\x00\x00\xff\xff\x36\xbf\x57\x22\x9f\x02\x00\x00")

func assetBootstrap3ButtonHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3ButtonHtml,
		"asset/bootstrap3/button.html",
	)
}

func assetBootstrap3ButtonHtml() (*asset, error) {
	bytes, err := assetBootstrap3ButtonHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/button.html", size: 671, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3CheckboxHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\xcb\x4e\xc3\x30\x10\xbc\xe7\x2b\x16\x57\xe1\x96\xf6\xc0\x09\x91\x46\xe2\x06\x12\xff\x80\xf2\xd8\x50\x0b\xc7\x8e\xe2\x4d\x69\x09\xfe\x77\x94\x3a\x2f\xf7\x41\x2b\x51\x71\xe2\x54\xd5\xbb\x33\x63\xcf\x4c\x1a\x1f\x78\x0e\x37\xb9\xaa\x8a\x57\x11\x6f\x55\x4d\xe0\x9b\xc6\x07\x8d\x04\xd3\xc3\x25\xb0\x95\xaa\xf8\xa7\x92\x14\x0b\x66\x77\x50\x66\x3c\x07\xdf\x78\x5e\x33\x83\x8f\x15\x4a\x07\xc1\x35\x8c\x08\x98\x19\xcf\x4a\x39\xa4\x07\xac\x5e\x98\xf1\x35\xa4\x22\xd6\x7a\xc9\xda\xd5\xe0\xad\x52\x75\xc9\x22\x0f\x00\xc0\x32\xa0\xc0\x62\xfe\x84\xa2\x7c\x89\x13\x14\x2d\xa8\x9d\x85\x62\xf7\xaf\x83\xa6\x4a\x04\xba\x08\xee\x20\x55\x92\x2a\x25\x82\xdd\x94\x45\x4d\xb3\x07\x9f\x73\x29\xb1\x22\xdc\x10\x18\x13\x2e\x76\x6b\x83\x18\x0a\x8d\x03\xff\xe4\x62\x3d\x3b\x8b\xc2\x45\xc6\xd7\xe3\xfe\x60\xc8\x09\xc4\x7d\xf7\x90\x6e\x3f\x57\x15\x70\xc2\x02\xb8\xb4\xd7\x7a\x26\x2c\x74\xaf\x38\x70\xf4\x97\x7e\x24\xaa\x78\x52\x13\x7e\xe9\x38\x47\x30\x66\x24\x1b\x1d\x70\xcf\x46\xd7\x5a\x9d\x91\x61\xaa\x31\xe0\xb9\x2c\x6b\x02\xda\x96\xb8\x64\xe9\x0a\xd3\xf7\x44\x6d\x58\xab\xee\x62\x07\xf5\x5b\x99\xe8\xf2\xa1\x9f\xdb\x34\xcc\x21\xef\x9e\x91\xe7\x25\xa3\x8b\x28\x7b\xaf\x1d\xbe\xc5\x9e\x07\x93\x7c\x46\x5c\x6b\x7b\x9f\xaa\x9d\x77\x3f\x27\x6a\xcc\xa5\xe0\x12\xbb\x0a\xa3\x38\x52\x62\xbb\x71\xdd\x02\xff\xa6\xb7\x4e\x0f\xcf\x16\xed\xd2\x92\x1d\x2b\xd8\xb5\x4b\xe3\x3c\xe5\xe0\xeb\xea\x92\xfb\x39\xae\x0c\xf3\xb8\x16\x34\xe4\x65\xab\xf7\x9f\xcb\xdf\xe5\x32\x79\xe9\x77\x00\x00\x00\xff\xff\x31\xdb\x2c\x54\x60\x06\x00\x00")

func assetBootstrap3CheckboxHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3CheckboxHtml,
		"asset/bootstrap3/checkbox.html",
	)
}

func assetBootstrap3CheckboxHtml() (*asset, error) {
	bytes, err := assetBootstrap3CheckboxHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/checkbox.html", size: 1632, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3FormHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xc1\x0a\xc2\x30\x10\x44\xef\xfd\x8a\xa1\x90\x6b\xbd\x4b\x2b\x78\xd0\x93\xf8\x0b\x25\x36\x1b\x1a\xd8\xa4\xd0\x6e\x11\x49\xf3\xef\x92\x28\x52\xbc\x25\xec\xcc\x9b\x17\x15\x9c\x05\x31\xf9\xe6\x2c\x32\xbb\xc7\x2a\x04\x95\x5a\x3b\xcd\x1e\x31\xfe\x5d\xb6\x45\x5b\x42\x4a\xa7\xa8\x40\xbc\xfc\x92\xe5\x1f\x8c\xb3\x50\xa9\x8a\x0a\x76\x9a\x31\x8c\x8e\x4d\x9f\xfb\x70\xe1\xc3\xb9\x3a\x62\xb3\x90\xe4\x14\x00\xe4\xf1\x30\xf0\x6a\x68\x97\x6e\x2e\x4c\xfe\xae\x3d\x6d\xda\x98\x63\xdd\x8c\xe2\xb9\xc6\xd3\xc9\x58\x20\xdd\x8e\x9b\xa7\x7b\xd6\xaf\x69\x95\xae\x54\x6f\xe5\xfd\x95\xa0\x60\xb2\x87\x4a\x55\x7b\x28\x92\xd5\x3b\x00\x00\xff\xff\xe4\x49\x98\x22\xed\x00\x00\x00")

func assetBootstrap3FormHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3FormHtml,
		"asset/bootstrap3/form.html",
	)
}

func assetBootstrap3FormHtml() (*asset, error) {
	bytes, err := assetBootstrap3FormHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/form.html", size: 237, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3InputHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x52\xcb\x4e\xc3\x30\x10\xbc\xe7\x2b\x16\x57\x39\xa6\x3d\x70\x42\x4a\x2b\x71\xe3\xc0\x3f\x20\xb7\x59\x53\x4b\x5b\xbb\xb2\x9d\xf2\x08\xfe\x77\x94\x38\x71\x1e\xa5\xe4\x40\x6e\xf4\x52\xc5\xde\x99\xf1\xcc\x4e\x95\x82\x14\x70\x27\xb4\x39\xbd\x10\xff\xd0\xa5\x83\xd4\x57\x29\x58\x74\x30\x3c\xdc\x02\x3b\x6a\x23\x3f\xb5\x72\x9c\x58\x98\x41\x55\x48\x01\xa9\x4f\x92\x6a\x05\x6f\x47\x54\x23\x84\xb4\xd0\x23\x60\xe5\x93\x20\x35\x22\xbd\x62\x4d\xf2\x42\x5e\xe0\x40\xdc\xda\x2d\xab\x47\xb3\x57\xa3\xcb\x33\xdb\x25\x00\x00\x81\x01\x09\x4f\xeb\x27\xa4\xf3\x33\xdf\x23\xd5\xa0\xfa\x2e\xa7\xe6\xab\x85\x1e\x34\x65\xf6\x94\xdd\xc3\x41\x2b\x67\x34\x65\xcd\x2d\xab\xd5\xb7\xac\xaa\x26\x1c\x6b\xa1\x0d\x78\xcf\x76\xd7\x37\x52\x29\x34\x0e\xdf\x1d\x78\x9f\x6f\x1a\x96\xf8\x16\x24\x8b\x51\x7e\xf0\xee\x4e\x9c\xed\xf2\x4d\x21\x2f\xfd\x7c\x97\xd7\x0d\xc0\x43\x6b\xb3\xfb\x0d\xec\x3e\x3a\x67\xe4\xbe\x74\x51\xaf\xa1\x90\xea\x5c\xba\x51\x5a\xad\x5d\x06\x9d\x93\x08\xfc\xb2\x5c\x20\x78\xdf\x4b\x4c\x1c\xcc\x30\x8e\x71\x23\x27\xc1\x64\xfb\x77\xa3\x0a\x52\x91\x54\xd8\xd6\x00\xe9\x87\x22\x84\x89\x45\x4a\xb0\xec\x96\x63\xcb\xe7\x76\xf2\x87\x7d\x4c\xdb\x34\xb7\x87\xe1\xbb\x7e\x0f\xbe\x40\xc1\x4b\x72\x31\xf9\x20\xf2\x1f\x12\x5e\x34\xdc\xfe\xe8\x3b\x00\x00\xff\xff\x23\x06\x91\x74\x32\x05\x00\x00")

func assetBootstrap3InputHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3InputHtml,
		"asset/bootstrap3/input.html",
	)
}

func assetBootstrap3InputHtml() (*asset, error) {
	bytes, err := assetBootstrap3InputHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/input.html", size: 1330, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3ModalHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xcf\xce\x93\x50\x10\xc5\xf7\x26\xbe\xc3\x64\x92\xcf\x1d\x25\x26\xdf\x4a\xb9\x24\x6a\x34\x2e\xd4\x57\x30\x17\x66\x90\x49\xee\x9f\x06\x86\x2a\x69\x79\x77\x03\x94\xf6\x6a\x1b\xff\xec\xbe\x55\x0b\x73\xce\xef\xcc\x9c\x00\x00\x50\x90\x1c\xa0\x76\xb6\xef\x0d\xfa\x48\xd6\x41\x63\x89\x11\xd4\x56\x12\x88\x7f\x18\xcc\x5e\x22\x74\xd1\xb1\x41\x12\xeb\xe2\x37\x04\xdb\x89\xcd\x9c\xad\xd8\x39\xa6\x6a\x34\xe8\xc7\xcf\xb3\xf5\xd3\xfc\x0a\xe1\x78\x04\x76\xec\x77\x6f\x54\x3b\xa9\x06\xe5\x53\x6f\x1b\x86\x69\x2a\x9f\x3f\xbb\x13\x98\x6d\xd8\x73\x48\xac\x07\xcf\x41\x71\x51\xdf\xd3\xd7\x31\x68\x22\x00\x38\x3e\x80\x34\x6b\xe6\x47\xb6\xc4\x1d\x3c\x4c\xdb\xec\xd6\xde\x2e\x92\xab\x1b\xa0\xa8\x06\xd5\x18\x40\xc7\x3d\x1b\x5c\x1f\x70\x33\xd5\x2e\xf6\x8c\x40\x56\x6d\x46\xd2\x7b\xb9\x90\xd2\x22\x0c\xbe\x5b\x74\x65\xd1\xef\x6d\x58\x07\xad\x10\x71\x30\xa8\xdd\xc0\x58\xbe\x50\xf1\xdc\xbf\x2e\xf2\x59\x50\x16\xf9\x1a\x93\x6e\xd1\x3e\xfe\xba\xa8\x8a\x3a\x46\x10\xfa\xad\xe0\x72\x2b\xf8\x7c\xec\x34\x15\x79\xfb\x78\x21\x15\x39\xc9\x21\xed\x86\x03\x49\x93\x54\x92\xd4\xf5\x36\xd2\xf8\xc7\xb2\xaa\x48\x63\x5a\xd5\xe2\x6e\x62\x07\x75\x2b\x8e\xbe\xce\x10\x90\x70\x17\xb6\x45\x85\xda\x0d\xc4\x89\x61\xf7\xde\xb1\xff\x62\x3d\x9f\x2c\xd1\x2b\xdc\xb5\xea\x1d\xc2\x77\xd1\x76\xe1\x98\x04\x7d\x43\xe3\x40\x73\x7a\xb2\xf2\x7f\x5c\xfb\x21\x46\xfd\xcb\xc7\xd1\x2c\x92\x7f\xbd\xf8\x06\xf8\x24\x6e\xbe\x8e\xb7\x7f\xeb\xef\xcf\x00\x00\x00\xff\xff\xf0\xc6\x15\xe6\xef\x03\x00\x00")

func assetBootstrap3ModalHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3ModalHtml,
		"asset/bootstrap3/modal.html",
	)
}

func assetBootstrap3ModalHtml() (*asset, error) {
	bytes, err := assetBootstrap3ModalHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/modal.html", size: 1007, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3PanelHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x4d\x6a\xeb\x30\x10\xc7\xf7\x06\xdf\x61\x70\xd0\xf2\xf9\xed\x4b\x12\x68\xa1\xa1\xab\x5e\xa1\x28\xd6\xa8\x1a\x90\xe5\x62\x29\x4d\x8b\xa2\xbb\x17\xc9\x11\x11\x8e\x4b\xba\x68\x97\x1e\xff\x3f\xe6\xc7\xc8\x33\x20\x09\xa8\xb1\x6f\xef\x9d\x1b\x69\x7f\x70\x08\x2c\xac\x05\xbd\x83\xf7\xb3\x1f\x27\xcb\x25\x42\x08\x5b\xcf\x00\xb5\xcd\xc2\xf4\x69\x04\x49\x60\xa1\xae\xea\xca\xaf\xe0\xa8\xd0\x00\x7e\x90\x75\xf0\xc6\x0d\x6a\x50\xc8\x05\x8e\xb0\x0a\x75\x55\x54\x3e\x4d\xd3\x68\x4b\x8d\x9d\xe6\xd6\x6e\x9a\x64\xf9\x17\x2d\x64\x5e\x9b\x6d\xde\xe3\xac\x0e\x61\xfd\x3f\xb6\xa6\xa4\x4b\xef\x52\xeb\x7e\x10\x9f\xf3\xce\x87\x38\x5b\x6e\x8c\xf2\x66\xca\x95\xc3\x08\x9d\x22\x2d\x5e\xa2\x09\xc8\xcc\xcc\x00\x00\x31\xd4\x74\xfa\x20\xb0\x90\xb6\x8f\x1a\xfb\x67\xde\xe3\x89\x0b\x71\xd7\xb4\xca\xf5\xba\x81\x23\x39\x95\x12\x36\x45\x28\x0b\x19\x21\xb6\xa5\x95\x7e\x0a\x26\x09\xb5\xb0\xe8\xe6\x70\xbb\x3c\x2f\x76\xfc\x06\xe5\x4a\xfa\x5b\x48\xe7\x9c\x02\xeb\x36\xce\x30\xb8\xeb\xd7\xb1\x9b\xa6\xcb\xb7\x9a\x2c\xf1\x5a\x37\x30\x2f\x21\x7f\x0b\xb9\x78\xbb\x3c\xfc\x0a\x00\x00\xff\xff\x31\x24\x3c\x62\x67\x03\x00\x00")

func assetBootstrap3PanelHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3PanelHtml,
		"asset/bootstrap3/panel.html",
	)
}

func assetBootstrap3PanelHtml() (*asset, error) {
	bytes, err := assetBootstrap3PanelHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/panel.html", size: 871, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3RadioHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x53\xc1\x6e\xab\x30\x10\xbc\x47\xca\x3f\xec\x73\xc4\xbb\x91\x1c\xde\xe9\xa9\x80\xd4\x5b\x2b\xf5\x1f\x22\x12\x96\xc6\x92\xb1\x91\x6d\xd2\xa6\xd4\xff\x5e\x81\x03\xd8\x81\x34\xa9\xda\x4a\x3d\x34\xa7\x60\xef\xce\x8c\x77\x66\xeb\x00\x68\x0e\x7f\x72\x21\x8b\x35\x4b\x0f\xa2\xd2\x10\x98\x3a\x00\x85\x1a\xdc\xc3\x18\xc8\x4e\x48\xfa\x22\xb8\x4e\x19\xb1\x35\xc8\x33\x9a\x43\x60\xe6\xb3\xf9\xec\xd8\xb2\x43\x56\xae\x59\xba\x41\x16\x23\xc3\x62\x39\x7c\xb7\x75\xf5\x02\x9e\x76\xc8\x3d\x64\xaa\x60\x40\x86\x85\x69\xb1\x68\xee\xb3\x8f\xe8\xe7\x33\x00\x80\x28\xa3\x7b\xd8\xb2\x54\xa9\x98\x34\xf5\xe1\xa3\x14\x55\x49\x12\x7b\xdb\xfc\x2c\x56\xab\xe5\x0e\x59\xf9\xd0\x4b\xe9\x0a\x22\xab\xee\x08\xb2\x15\x2c\x54\x45\xf8\x0f\xb6\x82\x6b\x29\x58\xd8\xde\x92\xa4\xae\x4f\x30\x96\x94\x73\x94\x1a\x9f\x35\x18\x13\xad\xda\x32\x9f\x16\x99\x42\x9f\xc9\x11\xdb\xf1\x90\x24\x5a\x65\x74\x7f\xd2\xe9\xcc\xf5\x9d\xe6\xff\xee\x3b\x8f\xad\xb9\x90\x40\x35\x16\x40\xb9\x15\x7c\xaf\xb1\x50\x9e\x8c\x1e\xad\x7b\xd3\xad\xd6\x92\x6e\x2a\x8d\xaf\x2a\xcd\x11\x8c\x39\x81\x1d\xa6\x34\x71\x31\xcc\xb8\xa1\x1d\xb0\x46\x94\x3d\x12\xe5\x65\xa5\x41\x1f\x4a\x8c\x89\x4c\x33\x2a\x48\xa3\xc4\xef\xee\x95\xfc\xe5\x1b\x55\xde\x74\xf7\xd6\x3d\x73\x06\x79\x6a\xe6\x17\x98\x93\xeb\x91\x7b\x4f\x46\xb0\x23\xf3\xed\xa9\x6f\xeb\x00\xd3\x58\xe4\xc5\xc2\xa9\xec\xfe\x9f\xd9\x13\xca\x19\xe5\xd8\xed\x08\xb2\x89\x2d\xb1\x25\xdf\xba\x21\x9f\x5e\x8c\x89\x78\x5f\x17\xdd\x0f\xc4\xf6\x6c\x60\xbf\x3a\x7f\xe3\x27\x4e\x6f\xb4\x6b\xfb\x05\x9b\x33\xcc\xd3\x8a\xe9\xc1\x67\x27\xd4\xbf\x7e\xfe\x64\x3f\xdd\x61\xbc\x05\x00\x00\xff\xff\x30\xfb\xe3\x24\x5a\x07\x00\x00")

func assetBootstrap3RadioHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3RadioHtml,
		"asset/bootstrap3/radio.html",
	)
}

func assetBootstrap3RadioHtml() (*asset, error) {
	bytes, err := assetBootstrap3RadioHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/radio.html", size: 1882, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3TableHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4d\x6a\xc5\x30\x0c\x84\xf7\x81\xdc\x61\x36\xde\xd6\x17\x10\x81\xde\xa1\x17\x48\x90\x8c\x0d\x69\x1e\xf8\xa9\x8b\xe2\xfa\xee\xc5\x4e\xdc\xfc\x94\xc0\xf3\x6a\x90\x46\xa3\x4f\x38\x19\x04\x07\x99\xe5\xf3\xed\x5d\x35\x86\xe9\x4b\x05\x26\x93\x8e\xd3\x2c\x48\xe9\xd2\xfa\x79\x8e\x4e\x90\xf3\x90\x0c\x64\x7e\xee\xd6\x5a\x58\x38\x38\x98\xdc\x77\x87\xd4\x0f\x2f\x23\xd7\x22\x69\x91\x43\xdf\x01\x00\x69\xdc\x54\x79\xc9\xc0\x3d\x22\xd4\x23\x2c\xd7\xb1\xe6\x21\xf5\x43\x4a\x50\xdf\x18\xc8\xaa\x3f\x67\xc8\xc2\x25\xa6\x4d\x91\xad\x4b\x8a\x6f\x5d\x7c\xcb\x38\x3d\xf8\x7b\x63\x2c\x72\x4b\x6d\x54\x71\xa7\xfa\x33\xde\xdf\xc0\xc5\xad\xf1\xc2\xce\x95\x9d\x0f\xec\xfc\x0a\xfb\xff\x26\xd9\x86\x78\xba\x86\xec\xfa\x0d\x7d\xf7\x1b\x00\x00\xff\xff\xed\xd2\x2d\xc8\xd2\x01\x00\x00")

func assetBootstrap3TableHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3TableHtml,
		"asset/bootstrap3/table.html",
	)
}

func assetBootstrap3TableHtml() (*asset, error) {
	bytes, err := assetBootstrap3TableHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/table.html", size: 466, mode: os.FileMode(436), modTime: time.Unix(1512708097, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetBootstrap3TextareaHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x53\xcd\x6e\xb3\x30\x10\xbc\xf3\x14\xfb\x39\xe2\x48\x72\xf8\x4e\x95\x08\x52\x6f\x3d\xf4\x1d\x2a\x27\xac\x1b\x4b\x1b\x3b\xb2\x4d\xfa\x43\xfd\xee\x15\x18\x0c\x24\xa5\x51\x25\xd4\x4b\xb9\x20\xec\x9d\x99\x9d\xdd\xa1\x4e\x41\x0a\xf8\x27\xb4\x39\x3e\x11\x7f\xd3\x95\x83\xd4\xd7\x29\x58\x74\x30\x3e\xdc\x02\x3b\x68\x23\xdf\xb5\x72\x9c\x58\xa8\x41\x55\x4a\x01\xa9\x4f\x92\x7a\x05\x2f\x07\x54\x13\x84\xb4\x30\x20\x60\xe5\x93\x20\x35\x21\xbd\x62\x4d\xf2\x52\x9e\x61\x4f\xdc\xda\x2d\x6b\x4a\xb3\x67\xa3\xab\x13\x2b\x12\x00\x80\xc0\x80\x84\xc7\xf5\x03\xd2\xe9\x91\xef\x90\x1a\x50\x73\x97\x53\xfb\xd5\x41\xf7\x9a\x32\x7b\xcc\xfe\xc3\x5e\x2b\x67\x34\x65\xed\x2d\x6b\xd4\xb7\xac\xae\x2f\x38\xd6\x42\x1b\xf0\x9e\x15\xd7\x37\x52\x29\x34\x0e\x5f\x1d\x78\x9f\x6f\x5a\x96\xd8\x0b\x92\xc5\x28\x3f\xea\xbb\x17\x67\x45\xbe\x29\xe5\x79\xa8\xef\xe7\x35\x03\xb8\xeb\x6c\xf6\xcf\xc8\xee\xbd\x73\x46\xee\x2a\x17\xf5\x5a\x8a\xa6\x2f\x6e\x90\x4f\x06\xd6\x39\x66\xd0\x9b\x89\xd8\x0f\xcb\x05\x82\xf7\x45\xbe\xe9\x91\x83\xe0\x85\x9f\xdb\xfc\xb3\x2c\x13\x97\x61\x00\xdd\x6b\x26\x26\x52\x91\x54\xd8\x45\x04\xe9\x8b\x90\x84\x8a\x45\x02\xb2\x6c\x02\xe2\x1f\x70\x6b\x5f\x8b\xed\xea\x32\x77\x3f\xdb\xd1\xb8\xe7\xef\x97\x52\xa2\xe0\x15\xb9\xb8\x95\x20\xf9\x47\xa6\xff\x3b\x83\x1f\x8e\x3e\x03\x00\x00\xff\xff\x73\xe4\x96\x3d\x86\x05\x00\x00")

func assetBootstrap3TextareaHtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetBootstrap3TextareaHtml,
		"asset/bootstrap3/textarea.html",
	)
}

func assetBootstrap3TextareaHtml() (*asset, error) {
	bytes, err := assetBootstrap3TextareaHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "asset/bootstrap3/textarea.html", size: 1414, mode: os.FileMode(436), modTime: time.Unix(1519284491, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"asset/bootstrap3/button.html": assetBootstrap3ButtonHtml,
	"asset/bootstrap3/checkbox.html": assetBootstrap3CheckboxHtml,
	"asset/bootstrap3/form.html": assetBootstrap3FormHtml,
	"asset/bootstrap3/input.html": assetBootstrap3InputHtml,
	"asset/bootstrap3/modal.html": assetBootstrap3ModalHtml,
	"asset/bootstrap3/panel.html": assetBootstrap3PanelHtml,
	"asset/bootstrap3/radio.html": assetBootstrap3RadioHtml,
	"asset/bootstrap3/table.html": assetBootstrap3TableHtml,
	"asset/bootstrap3/textarea.html": assetBootstrap3TextareaHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"asset": &bintree{nil, map[string]*bintree{
		"bootstrap3": &bintree{nil, map[string]*bintree{
			"button.html": &bintree{assetBootstrap3ButtonHtml, map[string]*bintree{}},
			"checkbox.html": &bintree{assetBootstrap3CheckboxHtml, map[string]*bintree{}},
			"form.html": &bintree{assetBootstrap3FormHtml, map[string]*bintree{}},
			"input.html": &bintree{assetBootstrap3InputHtml, map[string]*bintree{}},
			"modal.html": &bintree{assetBootstrap3ModalHtml, map[string]*bintree{}},
			"panel.html": &bintree{assetBootstrap3PanelHtml, map[string]*bintree{}},
			"radio.html": &bintree{assetBootstrap3RadioHtml, map[string]*bintree{}},
			"table.html": &bintree{assetBootstrap3TableHtml, map[string]*bintree{}},
			"textarea.html": &bintree{assetBootstrap3TextareaHtml, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

